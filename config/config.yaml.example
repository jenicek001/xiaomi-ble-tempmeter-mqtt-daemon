# Hybrid Configuration for Xiaomi Mijia Bluetooth Daemon
# Copy this file to config.yaml and modify as needed

# Bluetooth configuration (continuous scanning)
bluetooth:
  adapter: ${BLUETOOTH_ADAPTER:-0}              # Bluetooth adapter number
  connection_timeout: ${BLUETOOTH_CONNECTION_TIMEOUT:-10} # Connection timeout in seconds
  retry_attempts: ${BLUETOOTH_RETRY_ATTEMPTS:-3} # Number of retry attempts

# MQTT broker configuration  
mqtt:
  broker_host: ${MQTT_BROKER:-"localhost"}      # MQTT broker hostname/IP
  broker_port: ${MQTT_PORT:-1883}              # MQTT broker port
  username: ${MQTT_USERNAME:-""}               # MQTT username (optional)
  password: ${MQTT_PASSWORD:-""}               # MQTT password (optional)
  client_id: ${MQTT_CLIENT_ID:-"mijia-daemon"} # MQTT client ID
  
  # Topic configuration
  discovery_prefix: ${MQTT_DISCOVERY_PREFIX:-"homeassistant"} # HA discovery prefix
  
  # Message settings
  retain: ${MQTT_RETAIN:-true}                 # Retain messages
  qos: ${MQTT_QOS:-0}                         # Quality of Service level
  publish_interval: ${MQTT_PUBLISH_INTERVAL:-300} # Periodic publish interval in seconds

# Device configuration (auto-discovery enabled)
devices:
  auto_discovery: ${DEVICES_AUTO_DISCOVERY:-true} # Enable automatic device discovery
  
  # Static device configuration (optional friendly names only)
  static_devices:
    - mac: "4C:65:A8:DC:84:01"                # Device MAC address
      friendly_name: "Living Room"           # Friendly name (optional)
    - mac: "4C:65:A8:DB:99:44" 
      friendly_name: "Bedroom"               # Friendly name (optional)

# Threshold configuration for immediate publishing
thresholds:
  temperature: ${TEMPERATURE_THRESHOLD:-0.2}      # Â°C threshold for immediate MQTT publish
  humidity: ${HUMIDITY_THRESHOLD:-1.0}            # % RH threshold for immediate MQTT publish

# Logging configuration
logging:
  level: ${LOG_LEVEL:-"INFO"}                 # Log level (DEBUG, INFO, WARNING, ERROR)
  format: ${LOG_FORMAT:-"%(asctime)s - %(name)s - %(levelname)s - %(message)s"}
  file: ${LOG_FILE:-""}                       # Log file path (empty for stdout only)

# Optional monitoring features
monitoring:
  enabled: ${MONITORING_ENABLED:-false}       # Enable Prometheus metrics
  port: ${MONITORING_PORT:-8080}              # Metrics server port
  
web_dashboard:
  enabled: ${WEB_DASHBOARD_ENABLED:-false}    # Enable web dashboard
  port: ${WEB_DASHBOARD_PORT:-8081}           # Dashboard server port
  
health_check:
  enabled: ${HEALTH_CHECK_ENABLED:-true}      # Enable health check endpoint
  port: ${HEALTH_CHECK_PORT:-8082}            # Health check server port